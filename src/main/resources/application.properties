# Application Configuration
spring.application.name=distributed-inventory-system
server.port=${SERVER_PORT:8080}

spring.datasource.primary.url=${SPRING_DATASOURCE_PRIMARY_JDBC_URL}
spring.datasource.primary.username=${SPRING_DATASOURCE_PRIMARY_JDBC_URL}
spring.datasource.primary.password=${SPRING_DATASOURCE_PRIMARY_PASSWORD}
spring.datasource.primary.driver-class-name=org.postgresql.Driver

spring.datasource.replica.url=${SPRING_DATASOURCE_REPLICA_JDBC_URL}
spring.datasource.replica.username=${SPRING_DATASOURCE_REPLICA_USERNAME}
spring.datasource.replica.password=${SPRING_DATASOURCE_REPLICA_PASSWORD}
spring.datasource.replica.driver-class-name=org.postgresql.Driver

# HikariCP Connection Pool - Primary
spring.datasource.primary.hikari.maximum-pool-size=20
spring.datasource.primary.hikari.minimum-idle=5
spring.datasource.primary.hikari.connection-timeout=30000
spring.datasource.primary.hikari.idle-timeout=600000
spring.datasource.primary.hikari.max-lifetime=1800000

# HikariCP Connection Pool - Replica
spring.datasource.replica.hikari.maximum-pool-size=30
spring.datasource.replica.hikari.minimum-idle=10
spring.datasource.replica.hikari.connection-timeout=30000
spring.datasource.replica.hikari.idle-timeout=600000
spring.datasource.replica.hikari.max-lifetime=1800000

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Redis Cache Configuration
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.timeout=2000ms
spring.cache.type=redis
spring.cache.redis.time-to-live=300000

# --- CIRCUIT BREAKER ---
resilience4j.circuitbreaker.instances.inventoryService.register-health-indicator=true
resilience4j.circuitbreaker.instances.inventoryService.sliding-window-size=10
resilience4j.circuitbreaker.instances.inventoryService.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.inventoryService.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.inventoryService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.inventoryService.slow-call-rate-threshold=100
resilience4j.circuitbreaker.instances.inventoryService.slow-call-duration-threshold=2s
resilience4j.circuitbreaker.instances.inventoryService.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.inventoryService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.inventoryService.automatic-transition-from-open-to-half-open-enabled=true

# --- RETRY ---
resilience4j.retry.instances.inventoryService.max-attempts=3
resilience4j.retry.instances.inventoryService.wait-duration=500ms
resilience4j.retry.instances.inventoryService.enable-exponential-backoff=true
resilience4j.retry.instances.inventoryService.exponential-backoff-multiplier=2
resilience4j.retry.instances.inventoryService.retry-exceptions=org.springframework.dao.OptimisticLockingFailureException,org.springframework.dao.PessimisticLockingFailureException,java.sql.SQLException
resilience4j.retry.instances.inventoryService.ignore-exceptions=java.lang.IllegalArgumentException

# --- BULKHEAD
resilience4j.bulkhead.instances.inventoryService.max-concurrent-calls=50
resilience4j.bulkhead.instances.inventoryService.max-wait-duration=100ms

# --- RATE LIMITER ---
resilience4j.ratelimiter.instances.inventoryService.limit-for-period=100
resilience4j.ratelimiter.instances.inventoryService.limit-refresh-period=1s
resilience4j.ratelimiter.instances.inventoryService.timeout-duration=0s


# --- ACTUATOR (Health & Metrics) ---
management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true
management.endpoints.web.exposure.include=health,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.metrics.distribution.percentiles-histogram.http.server.requests=true


# Logging Configuration
logging.level.root=INFO
logging.level.com.inventory=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=WARN
logging.level.org.springframework.data.redis=INFO

# OpenAPI/Swagger Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operations-sorter=method

# Application Info
info.app.name=Distributed Inventory System
info.app.description=Optimized inventory with PostgreSQL Replication (1 Primary + 2 Replicas)
info.app.version=2.0.0